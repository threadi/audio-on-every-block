{"version":3,"file":"index.js","mappings":"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","sources":["webpack://audio-on-every-block/./src/blocks.js","webpack://audio-on-every-block/external window [\"wp\",\"element\"]","webpack://audio-on-every-block/webpack/bootstrap","webpack://audio-on-every-block/webpack/runtime/compat get default export","webpack://audio-on-every-block/webpack/runtime/define property getters","webpack://audio-on-every-block/webpack/runtime/hasOwnProperty shorthand","webpack://audio-on-every-block/webpack/runtime/make namespace object"],"sourcesContent":["/**\r\n * Add i18n\r\n */\r\nconst { __ } = wp.i18n;\r\n\r\n/**\r\n * List of supported blocks\r\n *\r\n * @type {string[]}\r\n */\r\nconst supportedBlocks = [\r\n    'core/heading',\r\n    'core/paragraph',\r\n    'core/gallery',\r\n    'core/list',\r\n    'core/quote',\r\n    'core/pullquote',\r\n    'core/table'\r\n];\r\n\r\n/**\r\n * Add the attribute for the mediaId\r\n *\r\n * @param settings\r\n * @param name\r\n * @returns {*}\r\n */\r\nfunction addAudioPlaybackAttribute(settings, name) {\r\n    if (typeof settings.attributes !== 'undefined') {\r\n        // Do nothing if it's another block than our supported ones.\r\n        if ( !supportedBlocks.includes( name ) ) {\r\n            return settings;\r\n        }\r\n        settings.attributes = Object.assign(settings.attributes, {\r\n            audioPlaybackId: {\r\n                type: 'integer',\r\n                default: 0\r\n            },\r\n            audioPlaybackTitle: {\r\n                type: 'string'\r\n            },\r\n        });\r\n    }\r\n    return settings;\r\n}\r\nwp.hooks.addFilter(\r\n    'blocks.registerBlockType',\r\n    'awp/cover-custom-attribute',\r\n    addAudioPlaybackAttribute\r\n);\r\n\r\nconst coverAdvancedControls = wp.compose.createHigherOrderComponent((BlockEdit) => {\r\n    return (props) => {\r\n        /**\r\n         * Add components\r\n         */\r\n        const { Fragment } = wp.element;\r\n        const { InspectorControls, MediaUpload, MediaUploadCheck } = wp.blockEditor;\r\n        const { Button, PanelBody, TextControl } = wp.components;\r\n\r\n        /**\r\n         * Event on select audio-file\r\n         *\r\n         * @param media\r\n         */\r\n        const onSelectMedia = (media) => {\r\n            props.setAttributes({\r\n                audioPlaybackId: media.id\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Event to remove selected audio-file\r\n         */\r\n        const removeMedia = () => {\r\n            props.setAttributes({\r\n                audioPlaybackId: 0\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Get settings\r\n         */\r\n        const { attributes, setAttributes, isSelected } = props;\r\n        return (\r\n            <Fragment>\r\n                <BlockEdit {...props} />\r\n                {isSelected && (supportedBlocks.includes( props.name )) &&\r\n                    <InspectorControls>\r\n                        <PanelBody\r\n                            title={ __( 'Audio Playback', 'audio-on-every-block' ) }\r\n                        >\r\n                            <div className=\"editor-choose-block-audio\">\r\n                                <MediaUploadCheck>\r\n                                    <MediaUpload\r\n                                        allowedTypes={ ['audio'] }\r\n                                        onSelect={onSelectMedia}\r\n                                        value={attributes.mediaId}\r\n                                        render={({open}) => (\r\n                                            <Button\r\n                                                className={attributes.audioPlaybackId === 0 ? 'editor-post-featured-image__toggle' : 'editor-post-featured-image__preview'}\r\n                                                onClick={open}\r\n                                            >\r\n                                                {attributes.audioPlaybackId === 0 && __('Choose an audio-file', 'audio-on-every-block')}\r\n                                            </Button>\r\n                                        )}\r\n                                    />\r\n                                </MediaUploadCheck>\r\n                                {attributes.audioPlaybackId !== 0 &&\r\n                                    <MediaUploadCheck>\r\n                                        <Button onClick={removeMedia} isLink isDestructive>{__('Remove audio-file', 'audio-on-every-block')}</Button>\r\n                                    </MediaUploadCheck>\r\n                                }\r\n                                <TextControl\r\n                                    label={__('Title', 'audio-on-every-block')}\r\n                                    value={ attributes.audioPlaybackTitle }\r\n                                    onChange={ ( value ) => setAttributes( { audioPlaybackTitle: value } ) }\r\n                                />\r\n                            </div>\r\n                        </PanelBody>\r\n                    </InspectorControls>\r\n                }\r\n            </Fragment>\r\n        );\r\n    };\r\n}, 'coverAdvancedControls');\r\n\r\nwp.hooks.addFilter(\r\n    'editor.BlockEdit',\r\n    'awp/cover-advanced-control',\r\n    coverAdvancedControls\r\n);\r\n","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["__","wp","i18n","supportedBlocks","addAudioPlaybackAttribute","settings","name","attributes","includes","Object","assign","audioPlaybackId","type","default","audioPlaybackTitle","hooks","addFilter","coverAdvancedControls","compose","createHigherOrderComponent","BlockEdit","props","Fragment","element","InspectorControls","MediaUpload","MediaUploadCheck","blockEditor","Button","PanelBody","TextControl","components","onSelectMedia","media","setAttributes","id","removeMedia","isSelected","mediaId","open","value"],"sourceRoot":""}